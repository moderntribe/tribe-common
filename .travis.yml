sudo: required

language: php

notifications:
  email: false

php:
  - '5.6'

services:
  - mysql

addons:
  apt:
    packages:
      # needed for Nginx
      - libjpeg-dev
      - libpng12-dev
      - php5-fpm
      - php5-mysql
      - nginx
  hosts:
    # resolve the following domains to localhost
    - tribe.localhost

# disable the default submodule logic
git:
  submodules: false

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

env:
  global:
    - WP_VERSION="latest"
    - WP_ROOT_FOLDER="/tmp/wordpress"
    - WP_URL="http://tribe.localhost"
    - WP_DOMAIN="tribe.localhost"
    - WP_TABLE_PREFIX="wp_"
    - DB_NAME="wp"
    - TEST_DB_NAME="test"
    - WP_ADMIN_USERNAME="admin"
    - WP_ADMIN_PASSWORD="password"

before_install:
  # create the databases needed for the tests
  - mysql -e "create database IF NOT EXISTS $DB_NAME;" -uroot
  - mysql -e "create database IF NOT EXISTS $TEST_DB_NAME;" -uroot

  # tweak git to correctly work with submodules
  - sed -i 's/git@github.com:/git:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive

install:
  # disable XDebug to speed up the tests
  - phpenv config-rm xdebug.ini

before_script:
  # set up folders
  - mkdir -p /tmp/tools $WP_ROOT_FOLDER

  # get the current branch name from Travis
  - export CURRENT_BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi) && echo "Current branch is $CURRENT_BRANCH"

  # install wp-cli
  - wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -P /tmp/tools/
  - chmod +x /tmp/tools/wp-cli.phar && mv /tmp/tools/wp-cli.phar /tmp/tools/wp
  - export PATH=$PATH:/tmp/tools:vendor/bin

  # install WordPress in the `wordpress` folder
  - cd $WP_ROOT_FOLDER
  - wp core download --version=$WP_VERSION
  - wp config create --dbname="$DB_NAME" --dbuser="root" --dbpass="" --dbhost="127.0.0.1" --dbprefix="$WP_TABLE_PREFIX"
  - wp core install --url="$WP_URL" --title="TEC Tests" --admin_user="$WP_ADMIN_USERNAME" --admin_password="$WP_ADMIN_PASSWORD" --admin_email="admin@$WP_DOMAIN" --skip-email

  # clone The Events Calendar in the plugins folder
  - cd wp-content/plugins
  - git clone --branch=master https://github.com/moderntribe/the-events-calendar.git the-events-calendar
  - cd the-events-calendar
  - git fetch
  # if the plugin has the current branch as a remote use that
  - export HAS_BRANCH=$(git branch -r | grep $CURRENT_BRANCH) && echo "Found current branch - $HAS_BRANCH"
  - export HAS_TRAVIS_BRANCH=$(git branch -r | grep $TRAVIS_BRANCH) && echo "Found Travis Branch - $TRAVIS_BRANCH"
  - if [ ! -z $HAS_BRANCH ]; then $(git checkout $CURRENT_BRANCH >/dev/null); else if [ ! -z $HAS_TRAVIS_BRANCH ]; then $(git checkout $TRAVIS_BRANCH >/dev/null); fi; fi
  - sed -i 's/git@github.com:/git:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive

  # get back to the build folder
  - cd $TRAVIS_BUILD_DIR

  # copy the Nginx configuration file to the available sites
  - sudo cp tests/_support/travis/nginx.conf /etc/nginx/sites-available/$WP_DOMAIN
  - sudo sed -e "s?%WP_ROOT_FOLDER%?$WP_ROOT_FOLDER?g" --in-place /etc/nginx/sites-available/$WP_DOMAIN
  - sudo sed -e "s?%WP_DOMAIN%?$WP_DOMAIN?g" --in-place /etc/nginx/sites-available/$WP_DOMAIN

  # enable the site
  - sudo ln -s /etc/nginx/sites-available/$WP_DOMAIN /etc/nginx/sites-enabled/

  # activate The Events Calendar in WordPress
  - cd $WP_ROOT_FOLDER
  - wp plugin activate the-events-calendar

  # flush rewrite rules
  - wp rewrite structure '/%postname%/' --hard

  # pull the correct common branch we are testing
  - export PLUGIN_DIR="$WP_ROOT_FOLDER/wp-content/plugins/the-events-calendar/common"
  - cd $PLUGIN_DIR
  - git checkout origin/$CURRENT_BRANCH
  - composer update --prefer-dist

  # get to the common dir
  - cd $PLUGIN_DIR

  # restart Nnginx and PHP-FPM services
  - sudo service php5-fpm restart
  - sudo service nginx restart

script:
  - codecept run integration
  - codecept run wpunit
  - codecept run muwpunit
